name: Publish Docker image

on:
  pull_request:
    types:
      - closed

jobs:
  push_to_registry:
    if: github.event.pull_request.merged == true
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build com Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/fastfood-pedido:latest .

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/fastfood-pedido:latest

  deploy-on-eks:
    needs: push_to_registry
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name eks-cluster --region us-east-1

      - name: Deploy namespace
        run: kubectl apply -f k8s/namespace.yml

      - name: Criar secrets do banco
        run: |
          kubectl create secret generic db-credentials-pedido \
            --from-literal=POSTGRES_USER="${{ secrets.DB_USERNAME_PEDIDO }}" \
            --from-literal=POSTGRES_PASSWORD="${{ secrets.DB_PASSWORD_PEDIDO }}" \
            --from-literal=POSTGRES_DB="${{ secrets.DB_NAME_PEDIDO }}" \
            --from-literal=SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL_PEDIDO }}" \
            -n fastfood \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Criar secret AWS
        run: |
          kubectl create secret generic aws-credentials \
            --from-literal=AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}" \
            --from-literal=AWS_SECRET_KEY="${{ secrets.AWS_SECRET_KEY }}" \
            --from-literal=AWS_SESSION_TOKEN="${{ secrets.AWS_SESSION_TOKEN }}" \
            --from-literal=AWS_REGION="${{ secrets.AWS_REGION }}" \
            --from-literal=ENDERECO_FILA_pedidos="${{ secrets.ENDERECO_FILA_pedidos }}" \
            -n fastfood \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Criar secrets das referencias dos outros microserviços
        run: |
          kubectl create secret generic app-services \
            --from-literal=APP_SERVICES_PRODUTOS="${{ secrets.APP_SERVICES_PRODUTOS }}" \
            --from-literal=APP_SERVICES_PAGAMENTOS="${{ secrets.APP_SERVICES_PAGAMENTOS }}" \
            -n fastfood \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Substituir variáveis no deployment
        run: |
          sed -i "s|\${DOCKER_USERNAME}|${{ secrets.DOCKER_USERNAME }}|g" k8s/app-deployment.yml

      - name: Aplicar deployment
        run: kubectl apply -f k8s

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/fastfood-pedido-deployment -n fastfood

      - name: Verify service
        run: |
          kubectl get svc fastfood-pedido -n fastfood || true
